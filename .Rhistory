pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(3, bold = TRUE, color = "#DC4015") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(3, bold = T, color = "#DC4015")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
# column_spec(3, bold = T, color = "#DC4015") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(3, color = "#DC4015") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(column = 3, bold = T) %>%
footnote(general = "Counts are based on all-time totals.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(column = 3, color = "#DC4015", ) %>%
footnote(general = "Counts are based on all-time totals.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.Date %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = "COVID-19 Test Results by Date") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.Gender %>%
arrange(Gender) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(3, bold = T, color = "#DC4015") %>%
footnote(general = "Counts are based on all-time totals. Gender identification is resprentative of recorded data and not a depiction of pronoun bias.")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;")
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
footnote(general = "Counts are based on all-time totals.")
# Cache Zip Code Boundaries via `tigris`
options(tigris_use_cache = TRUE)
char_zips <- zctas(cb = TRUE, starts_with = "191")
char_zips
df <- COVID.ZIP %>%
filter(covid_status == "POS") %>%
select(zip_code, count)
tibble(df)
df$count <- as.integer(df$count)
df$zip_code <- as.numeric(df$zip_code)
tibble(df)
join.df <- geo_join(char_zips,
df,
by_sp = "GEOID10",
by_df = "zip_code",
how = "left")
tibble(char_zips)
df$zip_code <- as.character(df$zip_code)
tibble(df)
join.df <- geo_join(char_zips,
df,
by_sp = "GEOID10",
by_df = "zip_code",
how = "left")
# Cache Zip Code Boundaries via `tigris`
options(tigris_use_cache = TRUE)
char_zips <- zctas(cb = TRUE, starts_with = "191")
df <- COVID.ZIP %>%
filter(covid_status == "POS") %>%
select(zip_code, count)
df$count <- as.integer(df$count)
df$zip_code <- as.character(df$zip_code)
join.df <- geo_join(char_zips,
df,
by_sp = "GEOID10",
by_df = "zip_code",
how = "left")
pal <- colorNumeric(
palette = "Blues",
domain = join.df@data$count, na.color = "#808080")
tibble(join.df)
join.df@data$count
join.df
join.df$count
pal <- colorNumeric(
palette = "Blues",
domain = join.dfcount, na.color = "#808080")
pal <- colorNumeric(
palette = "Blues",
domain = join.df$count, na.color = "#808080")
labels <-
paste0(
"Zip Code: ",
join.df@data$GEOID10, "<br/>",
"COVID Positive Count: ",
join.df@data$count) %>%
lapply(htmltools::HTML)
"Zip Code: ",
labels <-
paste0(
"Zip Code: ",
join.df$GEOID10, "<br/>",
"COVID Positive Count: ",
join.df$count) %>%
lapply(htmltools::HTML)
join.df %>%
leaflet %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(count),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels) %>%
addLegend(pal = pal,
values = ~count,
opacity = 0.7,
title = htmltools::HTML("COVID-19 Positive Count <br>
by Zip Code"),
position = "bottomright")
# Cache Zip Code Boundaries via `tigris`
options(tigris_use_cache = TRUE)
char_zips <- zctas(cb = TRUE, starts_with = "191")
df <- COVID.DeathZip %>%
select(zip_code, count)
df$count <- as.integer(df$count)
df$zip_code <- as.character(df$zip_code)
join.df <- geo_join(char_zips,
df,
by_sp = "GEOID10",
by_df = "zip_code",
how = "left")
pal <- colorNumeric(
palette = "Reds",
domain = join.df$count, na.color = "#808080")
labels <-
paste0(
"Zip Code: ",
join.df$GEOID10, "<br/>",
"COVID Death Count: ",
join.df$count) %>%
lapply(htmltools::HTML)
join.df %>%
leaflet %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(fillColor = ~pal(count),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(weight = 2,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels) %>%
addLegend(pal = pal,
values = ~count,
opacity = 0.7,
title = htmltools::HTML("COVID-19 Death Count <br>
by Zip Code"),
position = "bottomright")
COVID.Outcome
COVID.Date
unique(COVID.Date$Outcome)
COVID.DeathDate
COVID.DeathDate %>% order_by(ResultDate)
COVID.DeathDate %>% arrange(ResultDate)
?arrange
COVID.DeathDate %>% arrange(ResultDate) %>% View()
COVID.DeathRace <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_race")
COVID.Race <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_cases_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_cases_by_race")
tibble(COVID.Race)
COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = racial_identity/sum(count)
)
COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = count/sum(count)
)
# COVID Race Breakdown ---------------------------------------------------------
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = count/sum(count)
)
sum(COVID.Race$Percentage)
# COVID Race Breakdown ---------------------------------------------------------
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race
COVID.DeathRace
COVID.DeathRace <- COVID.DeathRace %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count))*100
)
COVID.DeathRace
# COVID Race Death Breakdown ---------------------------------------------------
COVID.DeathRace <- COVID.DeathRace %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count), 3)*100
)
COVID.DeathRace
sum(COVID.DeathRace$Percentage)
COVID.Gender
COVID.Race
COVID.DeathRace
COVID.Race[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
# COVID Race Breakdown ---------------------------------------------------------
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race[COVID.Race$racial_identity == "HISPANIC"]
COVID.Race
COVID.Race[COVID.Race$racial_identity == "HISPANIC"]
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race$racial_identity[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race$racial_identity[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
# COVID Race Death Breakdown ---------------------------------------------------
COVID.DeathRace <- COVID.DeathRace %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count), 3)*100
)
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "UNKNOWN"] <- "Unknown"
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "AFRICAN AMERICAN"] <- "African American"
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race
COVID.DeathRace
COVID.Race %>%
rbind(COVID.DeathRace)
colnames(COVID.Race) <- c("Race", "Count", "Timestamp", "Percentage")
# COVID Race Breakdown ---------------------------------------------------------
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race$racial_identity[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race$racial_identity[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
colnames(COVID.Race) <- c("Race", "Count", "Timestamp", "Percentage")
# COVID Race Death Breakdown ---------------------------------------------------
COVID.DeathRace <- COVID.DeathRace %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count), 3)*100
)
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "UNKNOWN"] <- "Unknown"
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "AFRICAN AMERICAN"] <- "African American"
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "HISPANIC"] <- "Hispanic"
colnames(COVID.DeathRace) <- c("Race", "Count", "Timestamp", "Percentage")
COVID.Race
COVID.DeathRace
COVID.Race %>%
rbind(COVID.DeathRace) %>%
select(Race, Count, Percentage)
COVID.Race %>%
rbind(COVID.DeathRace) %>%
select(Race, Count, Percentage) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 9, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 10, end_row = 15, label_row_css = "background-color: #666; color: #fff;") %>%
footnote(general = "Counts are based on all-time totals.")
knitr::include_graphics("PhillyMap.jpg")
# Load all applicable libraries
library(flexdashboard) # For construction of dashboard format
library(readr) # For faster CSV read using read_csv (instead of read.csv)
library(tidyverse) # For access to dplyr and other libraries
library(scales)
library(highcharter) # Graphing library of choice
library(leaflet) # Mapping library of choice
library(tigris) # Support for Zip Code cacheing
library(kableExtra) # Graphic table library
source("Init.R") # Most used dataframes come from this initial r-script
View(COVID.Gender)
COVID.Gender
COVID.Gender$Count[COVID.Gender$Gender == "Male" & COVID.Gender$Outcome == "Positive"]
percent(COVID.Gender$Count[COVID.Gender$Gender == "Male" & COVID.Gender$Outcome == "Died"]/COVID.Gender$Count[COVID.Gender$Gender == "Male" & COVID.Gender$Outcome == "Positive"], .01)
percent(COVID.Gender$Count[COVID.Gender$Gender == "Female" & COVID.Gender$Outcome == "Died"]/COVID.Gender$Count[COVID.Gender$Gender == "Female" & COVID.Gender$Outcome == "Positive"], .01)
# Load all applicable libraries
library(flexdashboard) # For construction of dashboard format
library(readr) # For faster CSV read using read_csv (instead of read.csv)
library(tidyverse) # For access to dplyr and other libraries
library(scales)
library(highcharter) # Graphing library of choice
library(leaflet) # Mapping library of choice
library(tigris) # Support for Zip Code cacheing
library(kableExtra) # Graphic table library
source("Init.R") # Most used dataframes come from this initial r-script
COVID.AgeC %>%
select(Age, Gender, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 5, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 6, end_row = 12, label_row_css = "background-color: #666; color: #fff;") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.Date %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = "COVID-19 Test Results by Date") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.Race %>%
rbind(COVID.DeathRace) %>%
select(Race, Count, Percentage) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 9, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 10, end_row = 15, label_row_css = "background-color: #666; color: #fff;") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.Race <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_cases_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_cases_by_race")
COVID.Race
COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race$racial_identity[COVID.Race$racial_identity == "AMERICAN INDIAN"] <- "American Indian"
COVID.Race$racial_identity[COVID.Race$racial_identity == "PACIFIC ISLANDER"] <- "Pacific Islander"
COVID.Race$racial_identity[COVID.Race$racial_identity == "NATIVE AMERICAN "] <- "Native American"
COVID.Race$racial_identity[COVID.Race$racial_identity == "BLACK"] <- "Black"
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race$racial_identity[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race$racial_identity[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
COVID.Race
COVID.Race <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_cases_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_cases_by_race")
# COVID Race Breakdown ---------------------------------------------------------
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race$racial_identity[COVID.Race$racial_identity == "AMERICAN INDIAN"] <- "American Indian"
COVID.Race$racial_identity[COVID.Race$racial_identity == "PACIFIC ISLANDER"] <- "Pacific Islander"
COVID.Race$racial_identity[COVID.Race$racial_identity == "NATIVE AMERICAN "] <- "Native American"
COVID.Race$racial_identity[COVID.Race$racial_identity == "BLACK"] <- "Black"
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race$racial_identity[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race$racial_identity[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
colnames(COVID.Race) <- c("Race", "Count", "Timestamp", "Percentage")
COVID.Race
COVID.Race$racial_identity[COVID.Race$racial_identity == "NATIVE AMERICAN"] <- "Native American"
COVID.Race <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_cases_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_cases_by_race")
# COVID Race Breakdown ---------------------------------------------------------
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race$racial_identity[COVID.Race$racial_identity == "AMERICAN INDIAN"] <- "American Indian"
COVID.Race$racial_identity[COVID.Race$racial_identity == "PACIFIC ISLANDER"] <- "Pacific Islander"
COVID.Race$racial_identity[COVID.Race$racial_identity == "NATIVE AMERICAN"] <- "Native American"
COVID.Race$racial_identity[COVID.Race$racial_identity == "BLACK"] <- "Black"
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race$racial_identity[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race$racial_identity[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
colnames(COVID.Race) <- c("Race", "Count", "Timestamp", "Percentage")
COVID.Race
COVID.Race <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_cases_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_cases_by_race")
COVID.Race <- COVID.Race %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count),3)*100
)
COVID.Race$racial_identity[COVID.Race$racial_identity == "AMERICAN INDIAN"] <- "American Indian"
COVID.Race$racial_identity[COVID.Race$racial_identity == "PACIFIC ISLANDER"] <- "Pacific Islander"
COVID.Race$racial_identity[COVID.Race$racial_identity == "NATIVE AMERICAN"] <- "Native American"
COVID.Race$racial_identity[COVID.Race$racial_identity == "BLACK"] <- "Black"
COVID.Race$racial_identity[COVID.Race$racial_identity == "HISPANIC"] <- "Hispanic"
COVID.Race$racial_identity[COVID.Race$racial_identity == "OTHER"] <- "Other"
COVID.Race$racial_identity[COVID.Race$racial_identity == "UNKNOWN"] <- "Unknown"
COVID.Race$racial_identity[COVID.Race$racial_identity == "DECLINE"] <- "Declined to Specify"
colnames(COVID.Race) <- c("Race", "Count", "Timestamp", "Percentage")
COVID.DeathRace <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_race&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_race")
COVID.DeathAge
COVID.DeathRace
# COVID Race Death Breakdown ---------------------------------------------------
COVID.DeathRace <- COVID.DeathRace %>%
filter(!is.na(racial_identity)) %>%
mutate(
Percentage = round(count/sum(count), 3)*100
)
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "UNKNOWN"] <- "Unknown"
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "AFRICAN AMERICAN"] <- "African American"
COVID.DeathRace$racial_identity[COVID.DeathRace$racial_identity == "HISPANIC"] <- "Hispanic"
colnames(COVID.DeathRace) <- c("Race", "Count", "Timestamp", "Percentage")
COVID.DeathRace
COVID.Race %>%
rbind(COVID.DeathRace) %>%
select(Race, Count, Percentage) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = 9, label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = 10, end_row = 15, label_row_css = "background-color: #666; color: #fff;") %>%
footnote(general = "Counts are based on all-time totals.")
COVID.Race %>%
rbind(COVID.DeathRace) %>%
select(Race, Count, Percentage)
nrow(COVID.Race)
nrow(COVID.DeathRace)
COVID.Race
COVID.Race %>%
rbind(COVID.DeathRace) %>%
select(Race, Count, Percentage) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(column = 3, bold = T, color = "#DC4015") %>%
pack_rows("Outcome: Positive", start_row = 1, end_row = nrow(COVID.Race), label_row_css = "background-color: #666; color: #fff;") %>%
pack_rows("Outcome: Died", start_row = nrow(COVID.Race) + 1, end_row = nrow(COVID.Race) + nrow(COVID.DeathRace), label_row_css = "background-color: #666; color: #fff;") %>%
footnote(general = "Counts are based on all-time totals.")

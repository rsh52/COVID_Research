hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DeathDate
# COVID Date Data --------------------------------------------------------------
# Data Cleaning
COVID.Date <- COVID.Date[,3:6]
colnames(COVID.Date) <- c("ResultDate", "Outcome", "Count", "Timestamp")
### Read in CSV Files from Open Data Philly ------------------------------------
## COVID Cases Datasets
COVID.Outcome <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_outcome&filename=covid_cases_by_outcome&format=csv&skipfields=cartodb_id")
COVID.Date <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_date&filename=covid_cases_by_date&format=csv&skipfields=cartodb_id")
COVID.ZIP <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_zip&filename=covid_cases_by_zip&format=csv&skipfields=cartodb_id")
COVID.Age <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_age&filename=covid_cases_by_age&format=csv&skipfields=cartodb_id")
COVID.Sex <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_sex&filename=covid_cases_by_sex&format=csv&skipfields=cartodb_id")
## COVID Deaths Datasets
COVID.DeathDate <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_date&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_date")
COVID.DeathZip <- read.csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_zip&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_zip")
COVID.DeathAge <- read.csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_age&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_age")
# COVID Outcome Data -----------------------------------------------------------
# Data Cleaning
COVID.Outcome <- COVID.Outcome[,3:6]
colnames(COVID.Outcome) <- c("TestResult", "Outcome", "Count", "Timestamp")
COVID.Outcome$Outcome[COVID.Outcome$Outcome == "died"] <- "Died"
COVID.Outcome$Outcome[COVID.Outcome$Outcome == "positive"] <- "Positive"
COVID.Outcome$Outcome[COVID.Outcome$Outcome == "negative"] <- "Negative"
COVID.Outcome$TestResult[COVID.Outcome$TestResult == "positive"] <- "Positive"
COVID.Outcome$TestResult[COVID.Outcome$TestResult == "negative"] <- "Negative"
COVID.Outcome$Status <- paste0(COVID.Outcome$TestResult, " - ", COVID.Outcome$Outcome)
# COVID Date Data --------------------------------------------------------------
# Data Cleaning
COVID.Date <- COVID.Date[,3:6]
colnames(COVID.Date) <- c("ResultDate", "Outcome", "Count", "Timestamp")
COVID.Date$TestResult[COVID.Date$TestResult == "positive"] <- "Positive"
COVID.Date$TestResult[COVID.Date$TestResult == "negative"] <- "Negative"
colnames(COVID.DeathDate) <- c("ClinicalDate", "Outcome", "Count", "TimeStamp")
# COVID Age --------------------------------------------------------------------
COVID.Age <- COVID.Age[,3:5]
colnames(COVID.Age) <- c("Age", "Count", "TimeStamp")
COVID.Age$Gender <- "All"
colnames(COVID.DeathAge) <- c("Gender", "Age", "Count", "TimeStamp")
COVID.AgeC <- rbind(COVID.Age, COVID.DeathAge)
## COVID Cases Datasets
COVID.Outcome <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_outcome&filename=covid_cases_by_outcome&format=csv&skipfields=cartodb_id")
## COVID Cases Datasets
COVID.Outcome <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_outcome&filename=covid_cases_by_outcome&format=csv&skipfields=cartodb_id")
COVID.Date <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_date&filename=covid_cases_by_date&format=csv&skipfields=cartodb_id")
COVID.ZIP <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_zip&filename=covid_cases_by_zip&format=csv&skipfields=cartodb_id")
COVID.Age <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_age&filename=covid_cases_by_age&format=csv&skipfields=cartodb_id")
COVID.Sex <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_sex&filename=covid_cases_by_sex&format=csv&skipfields=cartodb_id")
## COVID Deaths Datasets
COVID.DeathDate <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_date&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_date")
COVID.DeathZip <- read.csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_zip&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_zip")
COVID.DeathAge <- read.csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_age&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_age")
COVID.Outcome <- COVID.Outcome[,3:6]
colnames(COVID.Outcome) <- c("TestResult", "Outcome", "Count", "Timestamp")
COVID.Outcome$Outcome[COVID.Outcome$Outcome == "died"] <- "Died"
COVID.Outcome$Outcome[COVID.Outcome$Outcome == "positive"] <- "Positive"
COVID.Outcome$Outcome[COVID.Outcome$Outcome == "negative"] <- "Negative"
COVID.Outcome$TestResult[COVID.Outcome$TestResult == "positive"] <- "Positive"
COVID.Outcome$TestResult[COVID.Outcome$TestResult == "negative"] <- "Negative"
COVID.Outcome$Status <- paste0(COVID.Outcome$TestResult, " - ", COVID.Outcome$Outcome)
COVID.Date <- COVID.Date[,3:6]
colnames(COVID.Date) <- c("ResultDate", "Outcome", "Count", "Timestamp")
COVID.Date$TestResult[COVID.Date$TestResult == "positive"] <- "Positive"
COVID.Date$TestResult[COVID.Date$TestResult == "negative"] <- "Negative"
colnames(COVID.DeathDate) <- c("ClinicalDate", "Outcome", "Count", "TimeStamp")
colnames(COVID.DeathDate) <- c("ResultDate", "Outcome", "Count", "TimeStamp")
COVID.DeathDate
unique(COVID.DeathDate$Outcome)
COVID.Date$TestResult[COVID.Date$TestResult == "positive"] <- "Positive"
COVID.Date$Outcome[COVID.Date$Outcome == "positive"] <- "Positive"
COVID.Date$Outcome[COVID.Date$Outcome == "negative"] <- "Negative"
colnames(COVID.DeathDate) <- c("ResultDate", "Outcome", "Count", "TimeStamp")
COVID.Date
colnames(COVID.Date) <- c("ResultDate", "Outcome", "Count", "Timestamp")
COVID.Date$Outcome[COVID.Date$Outcome == "positive"] <- "Positive"
COVID.Date$Outcome[COVID.Date$Outcome == "negative"] <- "Negative"
colnames(COVID.DeathDate) <- c("ResultDate", "Outcome", "Count", "TimeStamp")
COVID.DeathDate$Outcome[COVID.DeathDate$Outcome == "DIED"] <- "Died"
COVID.Date
COVID.DeathDate
COVID.DateC <- rbind(COVID.Date, COVID.DeathDate)
colnames(COVID.DeathDate) <- c("ResultDate", "Outcome", "Count", "Timestamp")
COVID.DateC <- rbind(COVID.Date, COVID.DeathDate)
COVID.DateC %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_series(COVID.DeathDateC, hcaes(x = ))
COVID.DateC %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_series(COVID.DateC, hcaes(x = ))
COVID.DateC %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_series(COVID.DateC, hcaes(x = )) %>%
hc_add_theme(hc_theme_db()) %>%
# hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = paste0("COVID-19 Results Over Time as of: ", COVID.Outcome$Timestamp[1]), align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DateC %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
# hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = paste0("COVID-19 Results Over Time as of: ", COVID.Outcome$Timestamp[1]), align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DateC %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#89DC6B", "#F1431C", "orange")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = paste0("COVID-19 Results Over Time as of: ", COVID.Outcome$Timestamp[1]), align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.Date %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
# hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = paste0("COVID-19 Results Over Time as of: ", COVID.Outcome$Timestamp[1]), align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DeathDate %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
# hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = paste0("COVID-19 Results Over Time as of: ", COVID.Outcome$Timestamp[1]), align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DeathZip
COVID.Outcome$Timestamp[1]
labels
COVID.DeathAge
COVID.Age %>%
arrange(Age) %>%
hchart("column", hcaes(x = Age, y = Count, color = Age)) %>%
hc_add_theme(hc_theme_db()) %>%
# hc_colors(colors = c("#008FFF", "#DAF7A6", "#FFC300", "DC4015", "#C70039")) %>%
hc_title(text = "COVID-19 Age Breakdown", align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Age_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Age Category", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.Age
View(COVID.Age)
COVID.Age <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_age&filename=covid_cases_by_age&format=csv&skipfields=cartodb_id")
# COVID Age --------------------------------------------------------------------
COVID.Age <- COVID.Age[,3:5]
colnames(COVID.Age) <- c("Age", "Count", "TimeStamp")
COVID.Age$Gender <- "All"
colnames(COVID.DeathAge) <- c("Gender", "Age", "Count", "TimeStamp")
COVID.AgeC <- rbind(COVID.Age, COVID.DeathAge)
COVID.Age %>%
arrange(Age) %>%
hchart("column", hcaes(x = Age, y = Count, color = Age)) %>%
hc_add_theme(hc_theme_db()) %>%
# hc_colors(colors = c("#008FFF", "#DAF7A6", "#FFC300", "DC4015", "#C70039")) %>%
hc_title(text = "COVID-19 Age Breakdown", align = "left") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Age_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Age Category", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.AgeC
COVID.AgeC
COVID.DeathAge
colnames(COVID.Age) <- c("Age", "Count", "TimeStamp")
COVID.Age$Gender <- "All"
COVID.Age$Outcome <- "Positive"
colnames(COVID.DeathAge) <- c("Gender", "Age", "Count", "TimeStamp")
COVID.DeathAge$Outcome <- "Died"
COVID.AgeC <- rbind(COVID.Age, COVID.DeathAge)
COVID.Age <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_age&filename=covid_cases_by_age&format=csv&skipfields=cartodb_id")
## COVID Deaths Datasets
COVID.DeathDate <- read_csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_date&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_date")
# COVID Age --------------------------------------------------------------------
COVID.Age <- COVID.Age[,3:5]
colnames(COVID.Age) <- c("Age", "Count", "TimeStamp")
COVID.Age$Gender <- "All"
COVID.Age$Outcome <- "Positive"
colnames(COVID.DeathAge) <- c("Gender", "Age", "Count", "TimeStamp")
COVID.DeathAge$Outcome <- "Died"
COVID.AgeC <- rbind(COVID.Age, COVID.DeathAge)
COVID.DeathAge
COVID.Age <- read_csv("https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+covid_cases_by_age&filename=covid_cases_by_age&format=csv&skipfields=cartodb_id")
COVID.DeathAge <- read.csv("https://phl.carto.com/api/v2/sql?filename=covid_deaths_by_age&format=csv&skipfields=cartodb_id,the_geom,the_geom_webmercator&q=SELECT%20*%20FROM%20covid_deaths_by_age")
COVID.Age
COVID.DeathAge
# COVID Age --------------------------------------------------------------------
COVID.Age <- COVID.Age[,3:5]
colnames(COVID.Age) <- c("Age", "Count", "TimeStamp")
COVID.Age$Gender <- "All"
COVID.Age
COVID.Age$Outcome <- "Positive"
COVID.Age
colnames(COVID.DeathAge) <- c("Gender", "Age", "Count", "TimeStamp")
COVID.DeathAge
COVID.DeathAge$Outcome <- "Died"
COVID.DeathAge
COVID.AgeC <- rbind(COVID.Age, COVID.DeathAge)
COVID.AgeC
COVID.AgeC %>%
hc_chart(type = "bar") %>%
hc_yAxis(title = list(text = ""),
labels = list(format = "{value}")) %>%
hc_plotOptions(series=list(stacking='normal'),column = list(
dataLabels = list(enabled = FALSE),
enableMouseTracking = TRUE))
COVID.AgeC %>%
highchart() %>%
hc_chart(type = "bar") %>%
hc_yAxis(title = list(text = ""),
labels = list(format = "{value}")) %>%
hc_plotOptions(series=list(stacking='normal'),column = list(
dataLabels = list(enabled = FALSE),
enableMouseTracking = TRUE))
highchart() %>%
hc_chart(type = "bar") %>%
hc_yAxis(title = list(text = ""),
labels = list(format = "{value}")) %>%
hc_plotOptions(series=list(stacking='normal'),column = list(
dataLabels = list(enabled = FALSE),
enableMouseTracking = TRUE)) %>%
hc_xAxis(reversed=FALSE,opposite=TRUE,reversed=FALSE) %>%
hc_add_series(name="Value",color=c("rgb(205,35,35)"),data=list(-10, -5, -6))
COVID.AgeC
dataLabels = list(enabled = FALSE),
dataLabels = list(enabled = FALSE),
highchart() %>%
hc_chart(type = "bar") %>%
hc_yAxis(title = list(text = ""),
labels = list(format = "{value}")) %>%
hc_plotOptions(series=list(stacking='normal'),column = list(
dataLabels = list(enabled = FALSE),
enableMouseTracking = TRUE)) %>%
hc_xAxis(reversed=FALSE,opposite=TRUE,reversed=FALSE) %>%
hc_add_series(name="Value",color=c("rgb(205,35,35)"),data=list(-10, -5, -6))    %>%
hc_add_series(name="Values",color=c("rgb(165,85,85)"),data=list(-2, -5, -3))  %>%
hc_add_series(name="neutral",id='neutral',color=c("#766A62"),data=list(-2, -5, -3))  %>%
hc_add_series(name="Valuess",color=c("rgb(35,35,205)"),data=list(5, 1,6))  %>%
hc_add_series(name="Valuesss",color=c("rgb(85,85,165)"),data=list(2, 5, 3))  %>%
hc_add_series(name="Neutral",linkedTo='neutral',color=c("#766A62"),data=list(6, 8, 2))
install.packages("kableExtra")
install.packages("kableExtra")
library(kableExtra)
COVID.AgeC %>%
kable()
COVID.AgeC %>%
kable()
COVID.AgeC %>%
kable() %>%
kable_styling()
COVID.AgeC %>%
select(Age, Gender, Outcome, Count)
COVID.AgeC %>%
arrange(Age) %>%
select(Age, Gender, Outcome, Count)
COVID.AgeC %>%
arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count)
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count)
kable() %>%
kable_styling(c("striped", "condensed"))
kable() %>%
kable_styling(c("striped"))
kable() %>%
kable_styling(bootstrap_options = c("striped"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = cell_spec(
Outcome, color = "white", bold = T, background = spec_color(ifelse("Positive", "red", "black"))
)
)
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = cell_spec(
Outcome, color = "white", bold = T, background = spec_color(ifelse("Positive", "red", "black"))
)
)
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = cell_spec(
Outcome, color = "white", bold = T, background = spec_color(ifelse("Positive", "red", "black"))
)
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = ifelse("Positive",
cell_spec(Outcome, color = "white", bold = T, background = spec_color("red")),
cell_spec(Outcome, color = "white", bold = T, background = spec_color("black"))
)
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = ifelse(Outcome = "Positive",
cell_spec(Outcome, color = "white", bold = T, background = spec_color("red")),
cell_spec(Outcome, color = "white", bold = T, background = spec_color("black"))
)
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count)
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = ifelse(Outcome = "Positive",
cell_spec(Outcome, color = "white", bold = T, background = "red"),
cell_spec(Outcome, color = "white", bold = T, background = "black")
)
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
# mutate(
#   Outcome = ifelse(Outcome = "Positive",
#                    cell_spec(Outcome, color = "white", bold = T, background = "red"),
#                    cell_spec(Outcome, color = "white", bold = T, background = "black")
#   )
# ) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = cell_spec(Outcome, color = "white", bold = T, background = "red")
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Test = cell_spec(Outcome, color = "white", bold = T, background = "red")
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = cell_spec(Outcome, color = "white", bold = T, background = spec_color("red"))
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
Outcome = cell_spec(Outcome, color = "white", bold = T
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
mutate(
Outcome = cell_spec(Outcome, color = "white", bold = T)
) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
?cell_spec
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover"))
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
row_spec(6:12, color = "white", background = "#DC4015")
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
row_spec(1:5, color = "white", background = "#E9C509") %>%
row_spec(6:12, color = "white", background = "#DC4015")
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
row_spec(1:5, color = "black", background = "#E9C509") %>%
row_spec(6:12, color = "white", background = "#DC4015")
COVID.AgeC %>%
# arrange(Age, Gender) %>%
select(Age, Gender, Outcome, Count) %>%
kable() %>%
kable_styling(c("striped", "condensed", "hover")) %>%
column_spec(3, bold = T) %>%
row_spec(1:5, color = "black", background = "#E9C509") %>%
row_spec(6:12, color = "white", background = "#DC4015")
COVID.Date %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title("COVID-19 Test Results by Date") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.Date %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#89DC6B", "#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = "COVID-19 Test Results by Date") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DeathDate %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = "COVID-19 Death Counts by Date") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DeathDate %>%
arrange(ResultDate) %>%
hchart("area", hcaes(x = ResultDate, y = Count, group = Outcome)) %>%
hc_add_theme(hc_theme_db()) %>%
hc_colors(colors = c("#F1431C")) %>%
hc_chart(zoomType = "xy") %>%
hc_title(text = "COVID-19 Death Counts by Date") %>%
hc_exporting(enabled = TRUE, filename = "COVID19_Incidence_Plot") %>%
hc_yAxis(title = list(text = "Count (n)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_xAxis(title = list(text = "Date (Test Results Per Day)", style = list(fontSize = "16px", color = "white")),
labels = list(style = list(fontSize = "12px", color = "white"))) %>%
hc_credits(enabled = TRUE, text = "Source: https://www.opendataphilly.org/dataset/covid-cases")
COVID.DeathDate
